---
meta:
  name:    blacksmith
  release: Blacksmith
  target:  pipes/blacksmith
  url:     https://pipes.scalecf.com

  manifest:
    path: ci/manifest.yml

  bosh-lite:
    target:   ((thunder-dome.url))
    username: ((thunder-dome.username))
    password: ((thunder-dome.password))
    cacert:   ((thunder-dome.ca-certificate))

  aws:
    access_key: ((cloudfoundry-community-aws.access_key_id))
    secret_key: ((cloudfoundry-community-aws.secret_access_key))

  git:
    name:  ((cloudfoundry-community-ci-bot-github.name))
    email: ((cloudfoundry-community-ci-bot-github.email))

  github:
    owner:  blacksmith-community
    repo:   blacksmith-boshrelease
    branch: master
    private_key:  ((cloudfoundry-community-ci-bot-github.private_key))
    access_token: ((cloudfoundry-community-ci-bot-github.access_token_rw))

  shout:
    url:      ((shout.url))
    username: ((shout.username))
    password: ((shout.password))


jobs:
- name: blacksmith
  public: true
  plan:
  - in_parallel:
    - get: git
    - get: blacksmith
      trigger: true
      params:
        globs: [blacksmith-*.tar.bz2]
  - task: update-blacksmith
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.image.name ))
          tag:        (( grab meta.image.tag ))
      inputs:
      - name: git
      - name: blacksmith
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/update-blob
      params:
        REPO_ROOT:   git
        REPO_OUT:    pushme
        BLOB_DIR:    blacksmith
        BLOB_NAME:   Blacksmith
        BLOB_BINARY: blacksmith-*.tar.bz2
        BLOB_URL:    https://github.com/cloudfoundry-community/blacksmith
        BLOB_DESTINATION: blacksmith
        BLOB_CLEANUP:     blacksmith/blacksmith.*
        AWS_ACCESS_KEY: (( grab meta.aws.access_key ))
        AWS_SECRET_KEY: (( grab meta.aws.secret_key ))
        BRANCH:         (( grab meta.github.branch ))
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: update-blob job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: update-blob job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))

  - put: git
    params:
      rebase: true
      repository: pushme/git
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: A new version of '$BUILD_JOB_NAME' has been added to the BOSH release.
        ok:      yes
        link:    (( grab meta.shout.links.pipeline ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: Failed to push blob changes to git (for '$BUILD_JOB_NAME').
        ok:      no
        link:    (( grab meta.shout.links.build ))

- name: safe
  public: true
  plan:
  - in_parallel:
    - get: git
    - get: safe
      trigger: true
      params:
        globs: [safe-linux-amd64]
  - task: update-safe
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.image.name ))
          tag:        (( grab meta.image.tag ))
      inputs:
      - name: git
      - name: safe
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/update-blob
      params:
        REPO_ROOT:   git
        REPO_OUT:    pushme
        BLOB_DIR:    safe
        BLOB_NAME:   Safe
        BLOB_BINARY: safe-linux-amd64
        BLOB_URL:    https://github.com/cloudfoundry-community/safe
        BLOB_DESTINATION: safe
        BLOB_CLEANUP:     safe/safe*
        AWS_ACCESS_KEY: (( grab meta.aws.access_key ))
        AWS_SECRET_KEY: (( grab meta.aws.secret_key ))
        BRANCH:         (( grab meta.github.branch ))
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: update-blob job '$BUILD_JOB_NAME' succeeded.
        ok:      yes
        link:    (( grab meta.shout.links.build ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: update-blob job '$BUILD_JOB_NAME' failed.
        ok:      no
        link:    (( grab meta.shout.links.build ))

  - put: git
    params:
      rebase: true
      repository: pushme/git
    on_success:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: A new version of '$BUILD_JOB_NAME' has been added to the BOSH release.
        ok:      yes
        link:    (( grab meta.shout.links.pipeline ))
    on_failure:
      put: notify
      params:
        topic:   (( concat meta.shout.topic "-$BUILD_JOB_NAME" ))
        message: Failed to push blob changes to git (for '$BUILD_JOB_NAME').
        ok:      no
        link:    (( grab meta.shout.links.build ))

groups:
- name: blobs
  jobs:
    - blacksmith
    - safe

resources:
- name: blacksmith
  type: github-release
  source:
    user:         blacksmith-community
    repository:   blacksmith
    access_token: (( grab meta.github.access_token ))

- name: safe
  type: github-release
  source:
    user:         cloudfoundry-community
    repository:   safe
    access_token: (( grab meta.github.access_token ))
